Cadastro de Funcionários:

Permitir o cadastro de novos funcionários, incluindo informações como nome, cargo, salário, data de admissão, etc.
Cálculo de Folha de Pagamento:

Implementar uma função que calcule a folha de pagamento de cada funcionário com base em seu salário, descontando os impostos e adicionando benefícios.
Relatórios Gerenciais:

Gerar relatórios mensais que apresentem informações como a média salarial da empresa, o funcionário com o maior salário, o funcionário com o menor salário, etc.
Controle de Horas Extras:

Permitir que os funcionários registrem horas extras trabalhadas. O sistema deve calcular o valor das horas extras de acordo com a política da empresa.
Promoção de Funcionários:

Implementar uma funcionalidade que permita a promoção de funcionários com base em critérios específicos, como tempo de serviço, desempenho, etc.
Controle de Férias:

Desenvolver um módulo que permita o registro e controle das férias dos funcionários, evitando conflitos de datas.
Desafio Adicional:

Implementar uma interface gráfica (GUI) ou uma aplicação web para interação mais amigável com o sistema.
---------------------------------------------------------------------------------------------------------------------------------------------------

* Criar conexão
import pyodbc

dados_conexao = ("Driver={SQLite3 ODBC Driver};"
                "Server=localhost;"
                "Database=chinook.db")
conexao = pyodbc.connect(dados_conexao)

cursor = conexao.cursor()

---------------------------------------------------------------------------------------------------------------------------------------------------

* READ
cursor.execute("SELECT * FROM customers")

dados = cursor.fetchall()
descricao = cursor.description

cursor.close()

---------------------------------------------------------------------------------------------------------------------------------------------------

* CREATE
cursor.execute("""
INSERT INTO albums (Title, ArtistId)
VALUES
('Santt Pop', 4)
""")

cursor.commit()  #Aplica a alteração do comando (Edições)

cursor.close()

---------------------------------------------------------------------------------------------------------------------------------------------------

* UPDATE
cursor.execute("UPDATE customers SET Email='luisg@embraer.com.br' WHERE Email='elpandaff@gmail.com'")  #Executar comando

cursor.commit()  #Aplicar alterações

cursor.close()
conexao.close()  #Finalizar a conexão

---------------------------------------------------------------------------------------------------------------------------------------------------

* DELETE
cursor.execute('''
DELETE FROM albums WHERE AlbumId=348
''')

cursor.commit()

cursor.close() 
conexao.close()
---------------------------------------------------------------------------------------------------------------------------------------------------